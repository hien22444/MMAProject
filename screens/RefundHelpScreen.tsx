import React from 'react';
import { View, Text, StyleSheet, ScrollView } from 'react-native';
import { Ionicons } from '@expo/vector-icons';
import RequireAuth from '../components/RequireAuth';

const refundPolicies = [
    {
        id: '1',
        title: 'ƒê·ªïi tr·∫£ trong 7 ng√†y',
        description: 'ƒê·ªïi tr·∫£ s·∫£n ph·∫©m trong v√≤ng 7 ng√†y k·ªÉ t·ª´ ng√†y nh·∫≠n h√†ng',
        conditions: ['S·∫£n ph·∫©m c√≤n nguy√™n v·∫πn', 'C√≤n tem m√°c', 'Ch∆∞a s·ª≠ d·ª•ng'],
        icon: 'calendar-outline'
    },
    {
        id: '2',
        title: 'Ho√†n ti·ªÅn 100%',
        description: 'Ho√†n ti·ªÅn 100% gi√° tr·ªã s·∫£n ph·∫©m n·∫øu c√≥ l·ªói t·ª´ nh√† s·∫£n xu·∫•t',
        conditions: ['S·∫£n ph·∫©m b·ªã l·ªói', 'C√≥ b·∫±ng ch·ª©ng r√µ r√†ng', 'Trong th·ªùi h·∫°n b·∫£o h√†nh'],
        icon: 'card-outline'
    },
    {
        id: '3',
        title: 'ƒê·ªïi size/m√†u',
        description: 'ƒê·ªïi size ho·∫∑c m√†u s·∫Øc kh√°c n·∫øu c√≤n h√†ng',
        conditions: ['Trong v√≤ng 3 ng√†y', 'C√≤n h√†ng trong kho', 'S·∫£n ph·∫©m nguy√™n v·∫πn'],
        icon: 'shirt-outline'
    }
];

const refundSteps = [
    {
        step: '1',
        title: 'Li√™n h·ªá h·ªó tr·ª£',
        description: 'G·ªçi hotline ho·∫∑c chat v·ªõi CSKH ƒë·ªÉ b√°o c√°o v·∫•n ƒë·ªÅ'
    },
    {
        step: '2',
        title: 'Ch·ª•p ·∫£nh s·∫£n ph·∫©m',
        description: 'Ch·ª•p ·∫£nh s·∫£n ph·∫©m v√† g·ª≠i cho ch√∫ng t√¥i ƒë·ªÉ ki·ªÉm tra'
    },
    {
        step: '3',
        title: 'G·ª≠i s·∫£n ph·∫©m v·ªÅ',
        description: 'ƒê√≥ng g√≥i v√† g·ª≠i s·∫£n ph·∫©m v·ªÅ kho c·ªßa ch√∫ng t√¥i'
    },
    {
        step: '4',
        title: 'Ki·ªÉm tra v√† x·ª≠ l√Ω',
        description: 'Ch√∫ng t√¥i ki·ªÉm tra v√† x·ª≠ l√Ω ƒë·ªïi tr·∫£ trong 3-5 ng√†y'
    },
    {
        step: '5',
        title: 'Ho√†n ti·ªÅn/ƒê·ªïi h√†ng',
        description: 'Ho√†n ti·ªÅn v√†o t√†i kho·∫£n ho·∫∑c g·ª≠i s·∫£n ph·∫©m m·ªõi'
    }
];

const refundFaqs = [
    {
        id: '1',
        question: 'T√¥i c√≥ th·ªÉ ƒë·ªïi tr·∫£ s·∫£n ph·∫©m kh√¥ng v·ª´a size kh√¥ng?',
        answer: 'C√≥, b·∫°n c√≥ th·ªÉ ƒë·ªïi size trong v√≤ng 3 ng√†y k·ªÉ t·ª´ ng√†y nh·∫≠n h√†ng, mi·ªÖn l√† c√≤n h√†ng trong kho v√† s·∫£n ph·∫©m c√≤n nguy√™n v·∫πn.'
    },
    {
        id: '2',
        question: 'Th·ªùi gian ho√†n ti·ªÅn l√† bao l√¢u?',
        answer: 'Th·ªùi gian ho√†n ti·ªÅn t·ª´ 3-7 ng√†y l√†m vi·ªác t√πy thu·ªôc v√†o ph∆∞∆°ng th·ª©c thanh to√°n ban ƒë·∫ßu.'
    },
    {
        id: '3',
        question: 'T√¥i ph·∫£i tr·∫£ ph√≠ v·∫≠n chuy·ªÉn khi ƒë·ªïi tr·∫£ kh√¥ng?',
        answer: 'N·∫øu l·ªói t·ª´ ch√∫ng t√¥i, b·∫°n kh√¥ng ph·∫£i tr·∫£ ph√≠ v·∫≠n chuy·ªÉn. N·∫øu ƒë·ªïi tr·∫£ do l√Ω do c√° nh√¢n, b·∫°n s·∫Ω ch·ªãu ph√≠ v·∫≠n chuy·ªÉn v·ªÅ.'
    },
    {
        id: '4',
        question: 'S·∫£n ph·∫©m ƒë√£ s·ª≠ d·ª•ng c√≥ ƒë·ªïi tr·∫£ ƒë∆∞·ª£c kh√¥ng?',
        answer: 'Kh√¥ng, ch√∫ng t√¥i ch·ªâ ch·∫•p nh·∫≠n ƒë·ªïi tr·∫£ s·∫£n ph·∫©m ch∆∞a s·ª≠ d·ª•ng, c√≤n nguy√™n v·∫πn v√† tem m√°c.'
    },
    {
        id: '5',
        question: 'T√¥i c√≥ th·ªÉ ƒë·ªïi tr·∫£ s·∫£n ph·∫©m khuy·∫øn m√£i kh√¥ng?',
        answer: 'C√≥, s·∫£n ph·∫©m khuy·∫øn m√£i v·∫´n ƒë∆∞·ª£c ƒë·ªïi tr·∫£ theo ch√≠nh s√°ch th√¥ng th∆∞·ªùng.'
    }
];

export default function RefundHelpScreen() {
    return (
        <RequireAuth message="ƒêƒÉng nh·∫≠p ƒë·ªÉ xem th√¥ng tin v·ªÅ ho√†n tr·∫£ v√† ho√†n ti·ªÅn">
            <View style={styles.container}>
                <Text style={styles.header}>üîÑ Ho√†n tr·∫£ & Ho√†n ti·ªÅn</Text>

                <ScrollView style={styles.content}>
                <View style={styles.section}>
                    <Text style={styles.sectionTitle}>Ch√≠nh s√°ch ƒë·ªïi tr·∫£</Text>

                    {refundPolicies.map((policy) => (
                        <View key={policy.id} style={styles.policyItem}>
                            <View style={styles.policyHeader}>
                                <Ionicons name={policy.icon as any} size={24} color="#007bff" />
                                <Text style={styles.policyTitle}>{policy.title}</Text>
                            </View>
                            <Text style={styles.policyDescription}>{policy.description}</Text>

                            <Text style={styles.conditionsTitle}>ƒêi·ªÅu ki·ªán:</Text>
                            {policy.conditions.map((condition, index) => (
                                <View key={index} style={styles.conditionItem}>
                                    <Ionicons name="checkmark-circle-outline" size={16} color="#28a745" />
                                    <Text style={styles.conditionText}>{condition}</Text>
                                </View>
                            ))}
                        </View>
                    ))}
                </View>

                <View style={styles.section}>
                    <Text style={styles.sectionTitle}>Quy tr√¨nh ƒë·ªïi tr·∫£</Text>

                    {refundSteps.map((step) => (
                        <View key={step.step} style={styles.stepItem}>
                            <View style={styles.stepNumber}>
                                <Text style={styles.stepText}>{step.step}</Text>
                            </View>
                            <View style={styles.stepContent}>
                                <Text style={styles.stepTitle}>{step.title}</Text>
                                <Text style={styles.stepDescription}>{step.description}</Text>
                            </View>
                        </View>
                    ))}
                </View>

                <View style={styles.section}>
                    <Text style={styles.sectionTitle}>C√¢u h·ªèi th∆∞·ªùng g·∫∑p</Text>

                    {refundFaqs.map((faq) => (
                        <View key={faq.id} style={styles.faqItem}>
                            <View style={styles.questionRow}>
                                <Ionicons name="help-circle-outline" size={20} color="#007bff" />
                                <Text style={styles.question}>{faq.question}</Text>
                            </View>
                            <Text style={styles.answer}>{faq.answer}</Text>
                        </View>
                    ))}
                </View>

                <View style={styles.section}>
                    <Text style={styles.sectionTitle}>L∆∞u √Ω quan tr·ªçng</Text>

                    <View style={styles.noteItem}>
                        <Ionicons name="warning-outline" size={20} color="#ffc107" />
                        <Text style={styles.noteText}>S·∫£n ph·∫©m ph·∫£i c√≤n nguy√™n v·∫πn, ch∆∞a s·ª≠ d·ª•ng</Text>
                    </View>

                    <View style={styles.noteItem}>
                        <Ionicons name="warning-outline" size={20} color="#ffc107" />
                        <Text style={styles.noteText}>Tem m√°c v√† ph·ª• ki·ªán ƒëi k√®m ph·∫£i c√≤n ƒë·∫ßy ƒë·ªß</Text>
                    </View>

                    <View style={styles.noteItem}>
                        <Ionicons name="warning-outline" size={20} color="#ffc107" />
                        <Text style={styles.noteText}>Kh√¥ng √°p d·ª•ng cho s·∫£n ph·∫©m ƒë√£ gi·∫£m gi√° s√¢u</Text>
                    </View>

                    <View style={styles.noteItem}>
                        <Ionicons name="warning-outline" size={20} color="#ffc107" />
                        <Text style={styles.noteText}>Ch·ªâ √°p d·ª•ng cho kh√°ch h√†ng mua h√†ng ch√≠nh h√£ng</Text>
                    </View>
                </View>

                <View style={styles.contactSection}>
                    <Text style={styles.contactTitle}>C·∫ßn h·ªó tr·ª£ ƒë·ªïi tr·∫£?</Text>
                    <Text style={styles.contactText}>
                        N·∫øu b·∫°n c·∫ßn h·ªó tr·ª£ v·ªÅ ƒë·ªïi tr·∫£, vui l√≤ng li√™n h·ªá:
                    </Text>
                    <View style={styles.contactInfo}>
                        <Ionicons name="call-outline" size={16} color="#007bff" />
                        <Text style={styles.contactDetail}>Hotline: 1900-xxxx</Text>
                    </View>
                    <View style={styles.contactInfo}>
                        <Ionicons name="mail-outline" size={16} color="#007bff" />
                        <Text style={styles.contactDetail}>Email: refund@fashionstore.com</Text>
                    </View>
                    <View style={styles.contactInfo}>
                        <Ionicons name="time-outline" size={16} color="#007bff" />
                        <Text style={styles.contactDetail}>Gi·ªù l√†m vi·ªác: 8h-22h (Th·ª© 2 - Ch·ªß nh·∫≠t)</Text>
                    </View>
                </View>
            </ScrollView>
        </View>
        </RequireAuth>
    );
}

const styles = StyleSheet.create({
    container: {
        flex: 1,
        backgroundColor: '#f5f5f5',
    },
    header: {
        fontSize: 24,
        fontWeight: 'bold',
        padding: 20,
        backgroundColor: '#fff',
        borderBottomWidth: 1,
        borderBottomColor: '#eee',
    },
    content: {
        flex: 1,
        padding: 16,
    },
    section: {
        backgroundColor: '#fff',
        borderRadius: 10,
        padding: 16,
        marginBottom: 16,
    },
    sectionTitle: {
        fontSize: 18,
        fontWeight: 'bold',
        marginBottom: 16,
        color: '#333',
    },
    policyItem: {
        backgroundColor: '#f8f9fa',
        borderRadius: 8,
        padding: 16,
        marginBottom: 16,
    },
    policyHeader: {
        flexDirection: 'row',
        alignItems: 'center',
        marginBottom: 8,
    },
    policyTitle: {
        fontSize: 16,
        fontWeight: '600',
        color: '#333',
        marginLeft: 8,
        flex: 1,
    },
    policyDescription: {
        fontSize: 14,
        color: '#666',
        marginBottom: 12,
    },
    conditionsTitle: {
        fontSize: 14,
        fontWeight: '600',
        color: '#333',
        marginBottom: 8,
    },
    conditionItem: {
        flexDirection: 'row',
        alignItems: 'center',
        marginBottom: 4,
    },
    conditionText: {
        fontSize: 14,
        color: '#666',
        marginLeft: 8,
    },
    stepItem: {
        flexDirection: 'row',
        alignItems: 'flex-start',
        marginBottom: 16,
    },
    stepNumber: {
        width: 30,
        height: 30,
        borderRadius: 15,
        backgroundColor: '#007bff',
        justifyContent: 'center',
        alignItems: 'center',
        marginRight: 12,
    },
    stepText: {
        color: '#fff',
        fontWeight: 'bold',
        fontSize: 14,
    },
    stepContent: {
        flex: 1,
    },
    stepTitle: {
        fontSize: 16,
        fontWeight: '600',
        color: '#333',
        marginBottom: 4,
    },
    stepDescription: {
        fontSize: 14,
        color: '#666',
        lineHeight: 20,
    },
    faqItem: {
        marginBottom: 20,
        paddingBottom: 16,
        borderBottomWidth: 1,
        borderBottomColor: '#f0f0f0',
    },
    questionRow: {
        flexDirection: 'row',
        alignItems: 'center',
        marginBottom: 8,
    },
    question: {
        fontSize: 16,
        fontWeight: '600',
        marginLeft: 8,
        color: '#333',
    },
    answer: {
        fontSize: 14,
        color: '#666',
        lineHeight: 20,
        marginLeft: 28,
    },
    noteItem: {
        flexDirection: 'row',
        alignItems: 'center',
        marginBottom: 12,
    },
    noteText: {
        fontSize: 14,
        color: '#333',
        marginLeft: 8,
    },
    contactSection: {
        backgroundColor: '#fff',
        borderRadius: 10,
        padding: 16,
        marginBottom: 20,
    },
    contactTitle: {
        fontSize: 18,
        fontWeight: 'bold',
        marginBottom: 12,
        color: '#333',
    },
    contactText: {
        fontSize: 14,
        color: '#666',
        marginBottom: 16,
        lineHeight: 20,
    },
    contactInfo: {
        flexDirection: 'row',
        alignItems: 'center',
        marginBottom: 8,
    },
    contactDetail: {
        fontSize: 14,
        color: '#333',
        marginLeft: 8,
    },
}); 