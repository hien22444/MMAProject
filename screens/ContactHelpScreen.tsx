import React from 'react';
import { View, Text, StyleSheet, ScrollView, TouchableOpacity, Linking } from 'react-native';
import { Ionicons } from '@expo/vector-icons';
import RequireAuth from '../components/RequireAuth';

const contactMethods = [
    {
        id: '1',
        name: 'Hotline',
        number: '1900-xxxx',
        description: 'H·ªó tr·ª£ 24/7 cho c√°c v·∫•n ƒë·ªÅ kh·∫©n c·∫•p',
        icon: 'call-outline',
        color: '#28a745',
        action: () => Linking.openURL('tel:1900-xxxx')
    },
    {
        id: '2',
        name: 'Chat tr·ª±c tuy·∫øn',
        number: 'Chat v·ªõi CSKH',
        description: 'H·ªó tr·ª£ nhanh ch√≥ng qua chat',
        icon: 'chatbubbles-outline',
        color: '#007bff',
        action: () => alert('Ch·ª©c nƒÉng chat s·∫Ω ƒë∆∞·ª£c m·ªü')
    },
    {
        id: '3',
        name: 'Email',
        number: 'support@fashionstore.com',
        description: 'G·ª≠i email cho c√°c v·∫•n ƒë·ªÅ chi ti·∫øt',
        icon: 'mail-outline',
        color: '#ffc107',
        action: () => Linking.openURL('mailto:support@fashionstore.com')
    },
    {
        id: '4',
        name: 'Facebook',
        number: 'Fashion Store Official',
        description: 'Theo d√µi v√† li√™n h·ªá qua Facebook',
        icon: 'logo-facebook',
        color: '#1877f2',
        action: () => Linking.openURL('https://facebook.com/fashionstore')
    },
    {
        id: '5',
        name: 'Zalo',
        number: 'Fashion Store Zalo',
        description: 'Li√™n h·ªá qua Zalo Official Account',
        icon: 'chatbubble-outline',
        color: '#0068ff',
        action: () => Linking.openURL('https://zalo.me/fashionstore')
    }
];

const supportHours = [
    {
        day: 'Th·ª© 2 - Th·ª© 6',
        hours: '8:00 - 22:00',
        status: 'M·ªü c·ª≠a'
    },
    {
        day: 'Th·ª© 7',
        hours: '8:00 - 20:00',
        status: 'M·ªü c·ª≠a'
    },
    {
        day: 'Ch·ªß nh·∫≠t',
        hours: '9:00 - 18:00',
        status: 'M·ªü c·ª≠a'
    }
];

const commonIssues = [
    {
        id: '1',
        title: 'ƒê∆°n h√†ng b·ªã l·ªói',
        description: 'ƒê∆°n h√†ng kh√¥ng hi·ªÉn th·ªã ho·∫∑c b·ªã l·ªói',
        solution: 'Ki·ªÉm tra email x√°c nh·∫≠n ho·∫∑c li√™n h·ªá hotline'
    },
    {
        id: '2',
        title: 'Thanh to√°n th·∫•t b·∫°i',
        description: 'Kh√¥ng th·ªÉ thanh to√°n ƒë∆°n h√†ng',
        solution: 'Ki·ªÉm tra th√¥ng tin th·∫ª ho·∫∑c th·ª≠ ph∆∞∆°ng th·ª©c kh√°c'
    },
    {
        id: '3',
        title: 'Giao h√†ng ch·∫≠m',
        description: 'ƒê∆°n h√†ng ch∆∞a ƒë∆∞·ª£c giao ƒë√∫ng h·∫°n',
        solution: 'Theo d√µi tr·∫°ng th√°i ƒë∆°n h√†ng ho·∫∑c li√™n h·ªá CSKH'
    },
    {
        id: '4',
        title: 'S·∫£n ph·∫©m b·ªã l·ªói',
        description: 'S·∫£n ph·∫©m nh·∫≠n ƒë∆∞·ª£c c√≥ v·∫•n ƒë·ªÅ',
        solution: 'Ch·ª•p ·∫£nh v√† li√™n h·ªá ƒë·ªÉ ƒë·ªïi tr·∫£'
    }
];

export default function ContactHelpScreen() {
    return (
        <RequireAuth message="ƒêƒÉng nh·∫≠p ƒë·ªÉ xem th√¥ng tin li√™n h·ªá h·ªó tr·ª£">
            <View style={styles.container}>
                <Text style={styles.header}>üìû Li√™n h·ªá h·ªó tr·ª£</Text>

                <ScrollView style={styles.content}>
                <View style={styles.section}>
                    <Text style={styles.sectionTitle}>Ph∆∞∆°ng th·ª©c li√™n h·ªá</Text>

                    {contactMethods.map((method) => (
                        <TouchableOpacity
                            key={method.id}
                            style={styles.contactItem}
                            onPress={method.action}
                        >
                            <View style={styles.contactHeader}>
                                <Ionicons name={method.icon as any} size={24} color={method.color} />
                                <View style={styles.contactInfo}>
                                    <Text style={styles.contactName}>{method.name}</Text>
                                    <Text style={styles.contactNumber}>{method.number}</Text>
                                </View>
                                <Ionicons name="chevron-forward" size={20} color="#ccc" />
                            </View>
                            <Text style={styles.contactDescription}>{method.description}</Text>
                        </TouchableOpacity>
                    ))}
                </View>

                <View style={styles.section}>
                    <Text style={styles.sectionTitle}>Gi·ªù l√†m vi·ªác</Text>

                    {supportHours.map((schedule, index) => (
                        <View key={index} style={styles.scheduleItem}>
                            <View style={styles.scheduleHeader}>
                                <Text style={styles.scheduleDay}>{schedule.day}</Text>
                                <Text style={styles.scheduleStatus}>{schedule.status}</Text>
                            </View>
                            <Text style={styles.scheduleHours}>{schedule.hours}</Text>
                        </View>
                    ))}
                </View>

                <View style={styles.section}>
                    <Text style={styles.sectionTitle}>V·∫•n ƒë·ªÅ th∆∞·ªùng g·∫∑p</Text>

                    {commonIssues.map((issue) => (
                        <View key={issue.id} style={styles.issueItem}>
                            <View style={styles.issueHeader}>
                                <Ionicons name="warning-outline" size={20} color="#ffc107" />
                                <Text style={styles.issueTitle}>{issue.title}</Text>
                            </View>
                            <Text style={styles.issueDescription}>{issue.description}</Text>
                            <View style={styles.solutionContainer}>
                                <Ionicons name="bulb-outline" size={16} color="#28a745" />
                                <Text style={styles.solutionText}>{issue.solution}</Text>
                            </View>
                        </View>
                    ))}
                </View>

                <View style={styles.section}>
                    <Text style={styles.sectionTitle}>Th√¥ng tin li√™n h·ªá chi ti·∫øt</Text>

                    <View style={styles.infoItem}>
                        <Ionicons name="business-outline" size={20} color="#007bff" />
                        <View style={styles.infoContent}>
                            <Text style={styles.infoLabel}>ƒê·ªãa ch·ªâ c√¥ng ty:</Text>
                            <Text style={styles.infoValue}>123 Nguy·ªÖn Hu·ªá, Qu·∫≠n 1, TP.HCM</Text>
                        </View>
                    </View>

                    <View style={styles.infoItem}>
                        <Ionicons name="time-outline" size={20} color="#007bff" />
                        <View style={styles.infoContent}>
                            <Text style={styles.infoLabel}>Gi·ªù l√†m vi·ªác:</Text>
                            <Text style={styles.infoValue}>8:00 - 22:00 (Th·ª© 2 - Ch·ªß nh·∫≠t)</Text>
                        </View>
                    </View>

                    <View style={styles.infoItem}>
                        <Ionicons name="mail-outline" size={20} color="#007bff" />
                        <View style={styles.infoContent}>
                            <Text style={styles.infoLabel}>Email chung:</Text>
                            <Text style={styles.infoValue}>info@fashionstore.com</Text>
                        </View>
                    </View>

                    <View style={styles.infoItem}>
                        <Ionicons name="call-outline" size={20} color="#007bff" />
                        <View style={styles.infoContent}>
                            <Text style={styles.infoLabel}>T·ªïng ƒë√†i:</Text>
                            <Text style={styles.infoValue}>1900-xxxx (Mi·ªÖn ph√≠)</Text>
                        </View>
                    </View>
                </View>

                <View style={styles.section}>
                    <Text style={styles.sectionTitle}>H∆∞·ªõng d·∫´n li√™n h·ªá hi·ªáu qu·∫£</Text>

                    <View style={styles.tipItem}>
                        <Ionicons name="checkmark-circle-outline" size={16} color="#28a745" />
                        <Text style={styles.tipText}>Chu·∫©n b·ªã th√¥ng tin ƒë∆°n h√†ng tr∆∞·ªõc khi li√™n h·ªá</Text>
                    </View>

                    <View style={styles.tipItem}>
                        <Ionicons name="checkmark-circle-outline" size={16} color="#28a745" />
                        <Text style={styles.tipText}>M√¥ t·∫£ v·∫•n ƒë·ªÅ r√µ r√†ng v√† chi ti·∫øt</Text>
                    </View>

                    <View style={styles.tipItem}>
                        <Ionicons name="checkmark-circle-outline" size={16} color="#28a745" />
                        <Text style={styles.tipText}>Ch·ª•p ·∫£nh minh ch·ª©ng n·∫øu c√≥ v·∫•n ƒë·ªÅ v·ªõi s·∫£n ph·∫©m</Text>
                    </View>

                    <View style={styles.tipItem}>
                        <Ionicons name="checkmark-circle-outline" size={16} color="#28a745" />
                        <Text style={styles.tipText}>L∆∞u l·∫°i m√£ ƒë∆°n h√†ng ƒë·ªÉ tra c·ª©u nhanh</Text>
                    </View>
                </View>

                <View style={styles.emergencySection}>
                    <Text style={styles.emergencyTitle}>üö® Kh·∫©n c·∫•p</Text>
                    <Text style={styles.emergencyText}>
                        N·∫øu b·∫°n g·∫∑p v·∫•n ƒë·ªÅ kh·∫©n c·∫•p, vui l√≤ng g·ªçi ngay:
                    </Text>
                    <TouchableOpacity
                        style={styles.emergencyButton}
                        onPress={() => Linking.openURL('tel:1900-xxxx')}
                    >
                        <Ionicons name="call" size={24} color="#fff" />
                        <Text style={styles.emergencyButtonText}>G·ªçi ngay: 1900-xxxx</Text>
                    </TouchableOpacity>
                </View>
            </ScrollView>
        </View>
        </RequireAuth>
    );
}

const styles = StyleSheet.create({
    container: {
        flex: 1,
        backgroundColor: '#f5f5f5',
    },
    header: {
        fontSize: 24,
        fontWeight: 'bold',
        padding: 20,
        backgroundColor: '#fff',
        borderBottomWidth: 1,
        borderBottomColor: '#eee',
    },
    content: {
        flex: 1,
        padding: 16,
    },
    section: {
        backgroundColor: '#fff',
        borderRadius: 10,
        padding: 16,
        marginBottom: 16,
    },
    sectionTitle: {
        fontSize: 18,
        fontWeight: 'bold',
        marginBottom: 16,
        color: '#333',
    },
    contactItem: {
        backgroundColor: '#f8f9fa',
        borderRadius: 8,
        padding: 16,
        marginBottom: 12,
    },
    contactHeader: {
        flexDirection: 'row',
        alignItems: 'center',
        marginBottom: 8,
    },
    contactInfo: {
        flex: 1,
        marginLeft: 12,
    },
    contactName: {
        fontSize: 16,
        fontWeight: '600',
        color: '#333',
    },
    contactNumber: {
        fontSize: 14,
        color: '#007bff',
        fontWeight: '500',
    },
    contactDescription: {
        fontSize: 14,
        color: '#666',
        marginLeft: 36,
    },
    scheduleItem: {
        flexDirection: 'row',
        justifyContent: 'space-between',
        alignItems: 'center',
        paddingVertical: 12,
        borderBottomWidth: 1,
        borderBottomColor: '#f0f0f0',
    },
    scheduleHeader: {
        flexDirection: 'row',
        alignItems: 'center',
    },
    scheduleDay: {
        fontSize: 16,
        fontWeight: '500',
        color: '#333',
    },
    scheduleStatus: {
        fontSize: 12,
        color: '#28a745',
        backgroundColor: '#e8f5e8',
        paddingHorizontal: 8,
        paddingVertical: 2,
        borderRadius: 10,
        marginLeft: 8,
    },
    scheduleHours: {
        fontSize: 14,
        color: '#666',
    },
    issueItem: {
        backgroundColor: '#f8f9fa',
        borderRadius: 8,
        padding: 16,
        marginBottom: 12,
    },
    issueHeader: {
        flexDirection: 'row',
        alignItems: 'center',
        marginBottom: 8,
    },
    issueTitle: {
        fontSize: 16,
        fontWeight: '600',
        color: '#333',
        marginLeft: 8,
    },
    issueDescription: {
        fontSize: 14,
        color: '#666',
        marginBottom: 8,
        marginLeft: 28,
    },
    solutionContainer: {
        flexDirection: 'row',
        alignItems: 'center',
        marginLeft: 28,
    },
    solutionText: {
        fontSize: 14,
        color: '#28a745',
        fontWeight: '500',
        marginLeft: 8,
    },
    infoItem: {
        flexDirection: 'row',
        alignItems: 'flex-start',
        marginBottom: 16,
    },
    infoContent: {
        flex: 1,
        marginLeft: 12,
    },
    infoLabel: {
        fontSize: 14,
        fontWeight: '600',
        color: '#333',
        marginBottom: 4,
    },
    infoValue: {
        fontSize: 14,
        color: '#666',
    },
    tipItem: {
        flexDirection: 'row',
        alignItems: 'center',
        marginBottom: 12,
    },
    tipText: {
        fontSize: 14,
        color: '#333',
        marginLeft: 8,
    },
    emergencySection: {
        backgroundColor: '#fff3cd',
        borderRadius: 10,
        padding: 16,
        marginBottom: 20,
        borderWidth: 1,
        borderColor: '#ffeaa7',
    },
    emergencyTitle: {
        fontSize: 18,
        fontWeight: 'bold',
        color: '#856404',
        marginBottom: 8,
    },
    emergencyText: {
        fontSize: 14,
        color: '#856404',
        marginBottom: 16,
    },
    emergencyButton: {
        backgroundColor: '#dc3545',
        flexDirection: 'row',
        alignItems: 'center',
        justifyContent: 'center',
        paddingVertical: 12,
        borderRadius: 8,
    },
    emergencyButtonText: {
        color: '#fff',
        fontSize: 16,
        fontWeight: 'bold',
        marginLeft: 8,
    },
}); 