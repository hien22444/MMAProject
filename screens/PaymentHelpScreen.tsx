import React from 'react';
import { View, Text, StyleSheet, ScrollView } from 'react-native';
import { Ionicons } from '@expo/vector-icons';
import RequireAuth from '../components/RequireAuth';

const paymentMethods = [
    {
        id: '1',
        name: 'Thanh to√°n khi nh·∫≠n h√†ng (COD)',
        icon: 'cash-outline',
        description: 'Thanh to√°n b·∫±ng ti·ªÅn m·∫∑t khi nh·∫≠n h√†ng',
        pros: ['Kh√¥ng c·∫ßn th·∫ª ng√¢n h√†ng', 'An to√†n, ki·ªÉm tra h√†ng tr∆∞·ªõc'],
        cons: ['Ch·ªâ √°p d·ª•ng cho ƒë∆°n h√†ng d∆∞·ªõi 2 tri·ªáu']
    },
    {
        id: '2',
        name: 'Th·∫ª t√≠n d·ª•ng/ghi n·ª£',
        icon: 'card-outline',
        description: 'Thanh to√°n qua th·∫ª Visa, Mastercard',
        pros: ['Thanh to√°n nhanh ch√≥ng', 'B·∫£o m·∫≠t cao', 'T√≠ch ƒëi·ªÉm th·∫ª'],
        cons: ['C·∫ßn c√≥ th·∫ª ng√¢n h√†ng']
    },
    {
        id: '3',
        name: 'V√≠ ƒëi·ªán t·ª≠',
        icon: 'wallet-outline',
        description: 'Thanh to√°n qua MoMo, ZaloPay, VNPay',
        pros: ['Thanh to√°n nhanh', 'C√≥ nhi·ªÅu ∆∞u ƒë√£i', 'D·ªÖ s·ª≠ d·ª•ng'],
        cons: ['C·∫ßn c√†i ƒë·∫∑t app v√≠ ƒëi·ªán t·ª≠']
    },
    {
        id: '4',
        name: 'Chuy·ªÉn kho·∫£n ng√¢n h√†ng',
        icon: 'business-outline',
        description: 'Chuy·ªÉn kho·∫£n tr·ª±c ti·∫øp ƒë·∫øn t√†i kho·∫£n ng√¢n h√†ng',
        pros: ['Kh√¥ng m·∫•t ph√≠', 'An to√†n'],
        cons: ['C·∫ßn th·ª±c hi·ªán th·ªß c√¥ng', 'Ch·ªù x√°c nh·∫≠n']
    }
];

const paymentFaqs = [
    {
        id: '1',
        question: 'T√¥i c√≥ th·ªÉ thanh to√°n b·∫±ng ti·ªÅn m·∫∑t kh√¥ng?',
        answer: 'C√≥, b·∫°n c√≥ th·ªÉ ch·ªçn thanh to√°n khi nh·∫≠n h√†ng (COD) cho ƒë∆°n h√†ng d∆∞·ªõi 2 tri·ªáu ƒë·ªìng.'
    },
    {
        id: '2',
        question: 'Th·∫ª c·ªßa t√¥i b·ªã t·ª´ ch·ªëi thanh to√°n?',
        answer: 'Vui l√≤ng ki·ªÉm tra: 1) Th·∫ª c√≤n h·∫°n s·ª≠ d·ª•ng, 2) ƒê·ªß s·ªë d∆∞, 3) Th√¥ng tin th·∫ª ch√≠nh x√°c, 4) Th·∫ª ƒë∆∞·ª£c k√≠ch ho·∫°t giao d·ªãch online.'
    },
    {
        id: '3',
        question: 'T√¥i c√≥ th·ªÉ h·ªßy thanh to√°n kh√¥ng?',
        answer: 'B·∫°n c√≥ th·ªÉ h·ªßy thanh to√°n trong v√≤ng 30 ph√∫t sau khi th·ª±c hi·ªán. Sau th·ªùi gian n√†y, giao d·ªãch s·∫Ω ƒë∆∞·ª£c x·ª≠ l√Ω.'
    },
    {
        id: '4',
        question: 'Th√¥ng tin thanh to√°n c√≥ an to√†n kh√¥ng?',
        answer: 'Ch√∫ng t√¥i s·ª≠ d·ª•ng c√¥ng ngh·ªá m√£ h√≥a SSL ƒë·ªÉ b·∫£o v·ªá th√¥ng tin thanh to√°n c·ªßa b·∫°n. Th√¥ng tin kh√¥ng ƒë∆∞·ª£c l∆∞u tr·ªØ tr√™n h·ªá th·ªëng.'
    },
    {
        id: '5',
        question: 'T√¥i c√≥ nh·∫≠n ƒë∆∞·ª£c h√≥a ƒë∆°n kh√¥ng?',
        answer: 'C√≥, b·∫°n s·∫Ω nh·∫≠n ƒë∆∞·ª£c h√≥a ƒë∆°n ƒëi·ªán t·ª≠ qua email sau khi thanh to√°n th√†nh c√¥ng.'
    }
];

export default function PaymentHelpScreen() {
    return (
        <RequireAuth message="ƒêƒÉng nh·∫≠p ƒë·ªÉ xem th√¥ng tin v·ªÅ thanh to√°n">
            <View style={styles.container}>
                <Text style={styles.header}>üí≥ Thanh to√°n</Text>

                <ScrollView style={styles.content}>
                <View style={styles.section}>
                    <Text style={styles.sectionTitle}>Ph∆∞∆°ng th·ª©c thanh to√°n</Text>

                    {paymentMethods.map((method) => (
                        <View key={method.id} style={styles.methodItem}>
                            <View style={styles.methodHeader}>
                                <Ionicons name={method.icon as any} size={24} color="#007bff" />
                                <Text style={styles.methodName}>{method.name}</Text>
                            </View>
                            <Text style={styles.methodDescription}>{method.description}</Text>

                            <View style={styles.prosConsContainer}>
                                <View style={styles.prosContainer}>
                                    <Text style={styles.prosTitle}>‚úÖ ∆Øu ƒëi·ªÉm:</Text>
                                    {method.pros.map((pro, index) => (
                                        <Text key={index} style={styles.prosText}>‚Ä¢ {pro}</Text>
                                    ))}
                                </View>

                                <View style={styles.consContainer}>
                                    <Text style={styles.consTitle}>‚ö†Ô∏è L∆∞u √Ω:</Text>
                                    {method.cons.map((con, index) => (
                                        <Text key={index} style={styles.consText}>‚Ä¢ {con}</Text>
                                    ))}
                                </View>
                            </View>
                        </View>
                    ))}
                </View>

                <View style={styles.section}>
                    <Text style={styles.sectionTitle}>C√¢u h·ªèi th∆∞·ªùng g·∫∑p</Text>

                    {paymentFaqs.map((faq) => (
                        <View key={faq.id} style={styles.faqItem}>
                            <View style={styles.questionRow}>
                                <Ionicons name="help-circle-outline" size={20} color="#007bff" />
                                <Text style={styles.question}>{faq.question}</Text>
                            </View>
                            <Text style={styles.answer}>{faq.answer}</Text>
                        </View>
                    ))}
                </View>

                <View style={styles.section}>
                    <Text style={styles.sectionTitle}>B·∫£o m·∫≠t thanh to√°n</Text>

                    <View style={styles.securityItem}>
                        <Ionicons name="shield-checkmark-outline" size={20} color="#28a745" />
                        <Text style={styles.securityText}>M√£ h√≥a SSL 256-bit</Text>
                    </View>

                    <View style={styles.securityItem}>
                        <Ionicons name="lock-closed-outline" size={20} color="#28a745" />
                        <Text style={styles.securityText}>Kh√¥ng l∆∞u tr·ªØ th√¥ng tin th·∫ª</Text>
                    </View>

                    <View style={styles.securityItem}>
                        <Ionicons name="checkmark-circle-outline" size={20} color="#28a745" />
                        <Text style={styles.securityText}>Tu√¢n th·ªß chu·∫©n PCI DSS</Text>
                    </View>

                    <View style={styles.securityItem}>
                        <Ionicons name="eye-off-outline" size={20} color="#28a745" />
                        <Text style={styles.securityText}>B·∫£o v·ªá th√¥ng tin c√° nh√¢n</Text>
                    </View>
                </View>

                <View style={styles.contactSection}>
                    <Text style={styles.contactTitle}>C·∫ßn h·ªó tr·ª£ thanh to√°n?</Text>
                    <Text style={styles.contactText}>
                        N·∫øu b·∫°n g·∫∑p v·∫•n ƒë·ªÅ v·ªõi thanh to√°n, vui l√≤ng li√™n h·ªá:
                    </Text>
                    <View style={styles.contactInfo}>
                        <Ionicons name="call-outline" size={16} color="#007bff" />
                        <Text style={styles.contactDetail}>Hotline: 1900-xxxx</Text>
                    </View>
                    <View style={styles.contactInfo}>
                        <Ionicons name="mail-outline" size={16} color="#007bff" />
                        <Text style={styles.contactDetail}>Email: payment@fashionstore.com</Text>
                    </View>
                </View>
            </ScrollView>
        </View>
        </RequireAuth>
    );
}

const styles = StyleSheet.create({
    container: {
        flex: 1,
        backgroundColor: '#f5f5f5',
    },
    header: {
        fontSize: 24,
        fontWeight: 'bold',
        padding: 20,
        backgroundColor: '#fff',
        borderBottomWidth: 1,
        borderBottomColor: '#eee',
    },
    content: {
        flex: 1,
        padding: 16,
    },
    section: {
        backgroundColor: '#fff',
        borderRadius: 10,
        padding: 16,
        marginBottom: 16,
    },
    sectionTitle: {
        fontSize: 18,
        fontWeight: 'bold',
        marginBottom: 16,
        color: '#333',
    },
    methodItem: {
        backgroundColor: '#f8f9fa',
        borderRadius: 8,
        padding: 16,
        marginBottom: 16,
    },
    methodHeader: {
        flexDirection: 'row',
        alignItems: 'center',
        marginBottom: 8,
    },
    methodName: {
        fontSize: 16,
        fontWeight: '600',
        color: '#333',
        marginLeft: 8,
        flex: 1,
    },
    methodDescription: {
        fontSize: 14,
        color: '#666',
        marginBottom: 12,
    },
    prosConsContainer: {
        flexDirection: 'row',
    },
    prosContainer: {
        flex: 1,
        marginRight: 8,
    },
    prosTitle: {
        fontSize: 14,
        fontWeight: '600',
        color: '#28a745',
        marginBottom: 4,
    },
    prosText: {
        fontSize: 12,
        color: '#666',
        marginBottom: 2,
    },
    consContainer: {
        flex: 1,
        marginLeft: 8,
    },
    consTitle: {
        fontSize: 14,
        fontWeight: '600',
        color: '#ffc107',
        marginBottom: 4,
    },
    consText: {
        fontSize: 12,
        color: '#666',
        marginBottom: 2,
    },
    faqItem: {
        marginBottom: 20,
        paddingBottom: 16,
        borderBottomWidth: 1,
        borderBottomColor: '#f0f0f0',
    },
    questionRow: {
        flexDirection: 'row',
        alignItems: 'center',
        marginBottom: 8,
    },
    question: {
        fontSize: 16,
        fontWeight: '600',
        marginLeft: 8,
        color: '#333',
    },
    answer: {
        fontSize: 14,
        color: '#666',
        lineHeight: 20,
        marginLeft: 28,
    },
    securityItem: {
        flexDirection: 'row',
        alignItems: 'center',
        marginBottom: 12,
    },
    securityText: {
        fontSize: 14,
        color: '#333',
        marginLeft: 8,
    },
    contactSection: {
        backgroundColor: '#fff',
        borderRadius: 10,
        padding: 16,
        marginBottom: 20,
    },
    contactTitle: {
        fontSize: 18,
        fontWeight: 'bold',
        marginBottom: 12,
        color: '#333',
    },
    contactText: {
        fontSize: 14,
        color: '#666',
        marginBottom: 16,
        lineHeight: 20,
    },
    contactInfo: {
        flexDirection: 'row',
        alignItems: 'center',
        marginBottom: 8,
    },
    contactDetail: {
        fontSize: 14,
        color: '#333',
        marginLeft: 8,
    },
}); 