import React from 'react';
import { View, Text, StyleSheet, ScrollView } from 'react-native';
import { Ionicons } from '@expo/vector-icons';
import RequireAuth from '../components/RequireAuth';

const shippingFaqs = [
    {
        id: '1',
        question: 'Th·ªùi gian giao h√†ng l√† bao l√¢u?',
        answer: 'Th·ªùi gian giao h√†ng t·ª´ 1-3 ng√†y l√†m vi·ªác t√πy thu·ªôc v√†o khu v·ª±c. Khu v·ª±c n·ªôi th√†nh TP.HCM: 1-2 ng√†y, c√°c t·ªânh kh√°c: 2-3 ng√†y.'
    },
    {
        id: '2',
        question: 'Ph√≠ v·∫≠n chuy·ªÉn l√† bao nhi√™u?',
        answer: 'Ph√≠ v·∫≠n chuy·ªÉn c·ªë ƒë·ªãnh 30.000ƒë cho t·∫•t c·∫£ ƒë∆°n h√†ng. Mi·ªÖn ph√≠ v·∫≠n chuy·ªÉn cho ƒë∆°n h√†ng t·ª´ 500.000ƒë tr·ªü l√™n.'
    },
    {
        id: '3',
        question: 'T√¥i c√≥ th·ªÉ ch·ªçn th·ªùi gian giao h√†ng kh√¥ng?',
        answer: 'C√≥, b·∫°n c√≥ th·ªÉ ch·ªçn khung gi·ªù giao h√†ng: S√°ng (8h-12h), Chi·ªÅu (13h-17h), T·ªëi (18h-21h) khi ƒë·∫∑t h√†ng.'
    },
    {
        id: '4',
        question: 'L√†m sao ƒë·ªÉ theo d√µi ƒë∆°n h√†ng?',
        answer: 'B·∫°n s·∫Ω nh·∫≠n ƒë∆∞·ª£c SMS v√† email c·∫≠p nh·∫≠t tr·∫°ng th√°i ƒë∆°n h√†ng. C≈©ng c√≥ th·ªÉ theo d√µi trong m·ª•c "L·ªãch s·ª≠ ƒë∆°n h√†ng".'
    },
    {
        id: '5',
        question: 'ƒê∆°n h√†ng b·ªã giao sai ƒë·ªãa ch·ªâ th√¨ sao?',
        answer: 'N·∫øu ƒë∆°n h√†ng b·ªã giao sai, vui l√≤ng li√™n h·ªá ngay v·ªõi ch√∫ng t√¥i qua hotline ƒë·ªÉ ƒë∆∞·ª£c h·ªó tr·ª£ v√† ƒëi·ªÅu ch·ªânh.'
    }
];

const shippingMethods = [
    {
        id: '1',
        name: 'Giao h√†ng ti√™u chu·∫©n',
        time: '1-3 ng√†y',
        fee: '30.000ƒë',
        description: 'Giao h√†ng trong gi·ªù h√†nh ch√≠nh'
    },
    {
        id: '2',
        name: 'Giao h√†ng nhanh',
        time: '2-4 gi·ªù',
        fee: '50.000ƒë',
        description: 'Giao h√†ng trong ng√†y (ch·ªâ √°p d·ª•ng n·ªôi th√†nh)'
    },
    {
        id: '3',
        name: 'Giao h√†ng mi·ªÖn ph√≠',
        time: '1-3 ng√†y',
        fee: 'Mi·ªÖn ph√≠',
        description: '√Åp d·ª•ng cho ƒë∆°n h√†ng t·ª´ 500.000ƒë'
    }
];

export default function ShippingHelpScreen() {
    return (
        <RequireAuth message="ƒêƒÉng nh·∫≠p ƒë·ªÉ xem th√¥ng tin v·ªÅ v·∫≠n chuy·ªÉn v√† giao h√†ng">
            <View style={styles.container}>
                <Text style={styles.header}>üöö V·∫≠n chuy·ªÉn & Giao h√†ng</Text>

                <ScrollView style={styles.content}>
                <View style={styles.section}>
                    <Text style={styles.sectionTitle}>Ph∆∞∆°ng th·ª©c v·∫≠n chuy·ªÉn</Text>

                    {shippingMethods.map((method) => (
                        <View key={method.id} style={styles.methodItem}>
                            <View style={styles.methodHeader}>
                                <Text style={styles.methodName}>{method.name}</Text>
                                <Text style={styles.methodFee}>{method.fee}</Text>
                            </View>
                            <Text style={styles.methodTime}>‚è± Th·ªùi gian: {method.time}</Text>
                            <Text style={styles.methodDescription}>{method.description}</Text>
                        </View>
                    ))}
                </View>

                <View style={styles.section}>
                    <Text style={styles.sectionTitle}>C√¢u h·ªèi th∆∞·ªùng g·∫∑p</Text>

                    {shippingFaqs.map((faq) => (
                        <View key={faq.id} style={styles.faqItem}>
                            <View style={styles.questionRow}>
                                <Ionicons name="help-circle-outline" size={20} color="#007bff" />
                                <Text style={styles.question}>{faq.question}</Text>
                            </View>
                            <Text style={styles.answer}>{faq.answer}</Text>
                        </View>
                    ))}
                </View>

                <View style={styles.section}>
                    <Text style={styles.sectionTitle}>Khu v·ª±c giao h√†ng</Text>

                    <View style={styles.areaItem}>
                        <Ionicons name="location-outline" size={20} color="#28a745" />
                        <View style={styles.areaInfo}>
                            <Text style={styles.areaName}>N·ªôi th√†nh TP.HCM</Text>
                            <Text style={styles.areaTime}>Giao h√†ng: 1-2 ng√†y</Text>
                        </View>
                    </View>

                    <View style={styles.areaItem}>
                        <Ionicons name="location-outline" size={20} color="#ffc107" />
                        <View style={styles.areaInfo}>
                            <Text style={styles.areaName}>Ngo·∫°i th√†nh TP.HCM</Text>
                            <Text style={styles.areaTime}>Giao h√†ng: 2-3 ng√†y</Text>
                        </View>
                    </View>

                    <View style={styles.areaItem}>
                        <Ionicons name="location-outline" size={20} color="#dc3545" />
                        <View style={styles.areaInfo}>
                            <Text style={styles.areaName}>C√°c t·ªânh kh√°c</Text>
                            <Text style={styles.areaTime}>Giao h√†ng: 2-3 ng√†y</Text>
                        </View>
                    </View>
                </View>

                <View style={styles.section}>
                    <Text style={styles.sectionTitle}>L∆∞u √Ω khi nh·∫≠n h√†ng</Text>

                    <View style={styles.noteItem}>
                        <Ionicons name="checkmark-circle-outline" size={16} color="#28a745" />
                        <Text style={styles.noteText}>Ki·ªÉm tra s·∫£n ph·∫©m tr∆∞·ªõc khi k√Ω nh·∫≠n</Text>
                    </View>

                    <View style={styles.noteItem}>
                        <Ionicons name="checkmark-circle-outline" size={16} color="#28a745" />
                        <Text style={styles.noteText}>T·ª´ ch·ªëi nh·∫≠n h√†ng n·∫øu s·∫£n ph·∫©m b·ªã h∆∞ h·ªèng</Text>
                    </View>

                    <View style={styles.noteItem}>
                        <Ionicons name="checkmark-circle-outline" size={16} color="#28a745" />
                        <Text style={styles.noteText}>Gi·ªØ l·∫°i bi√™n nh·∫≠n ƒë·ªÉ ƒë·ªïi tr·∫£ n·∫øu c·∫ßn</Text>
                    </View>

                    <View style={styles.noteItem}>
                        <Ionicons name="checkmark-circle-outline" size={16} color="#28a745" />
                        <Text style={styles.noteText}>Li√™n h·ªá ngay n·∫øu c√≥ v·∫•n ƒë·ªÅ v·ªõi ƒë∆°n h√†ng</Text>
                    </View>
                </View>

                <View style={styles.contactSection}>
                    <Text style={styles.contactTitle}>C·∫ßn h·ªó tr·ª£ v·ªÅ v·∫≠n chuy·ªÉn?</Text>
                    <Text style={styles.contactText}>
                        N·∫øu b·∫°n c√≥ th·∫Øc m·∫Øc v·ªÅ v·∫≠n chuy·ªÉn, vui l√≤ng li√™n h·ªá:
                    </Text>
                    <View style={styles.contactInfo}>
                        <Ionicons name="call-outline" size={16} color="#007bff" />
                        <Text style={styles.contactDetail}>Hotline: 1900-xxxx</Text>
                    </View>
                    <View style={styles.contactInfo}>
                        <Ionicons name="mail-outline" size={16} color="#007bff" />
                        <Text style={styles.contactDetail}>Email: shipping@fashionstore.com</Text>
                    </View>
                </View>
            </ScrollView>
        </View>
        </RequireAuth>
    );
}

const styles = StyleSheet.create({
    container: {
        flex: 1,
        backgroundColor: '#f5f5f5',
    },
    header: {
        fontSize: 24,
        fontWeight: 'bold',
        padding: 20,
        backgroundColor: '#fff',
        borderBottomWidth: 1,
        borderBottomColor: '#eee',
    },
    content: {
        flex: 1,
        padding: 16,
    },
    section: {
        backgroundColor: '#fff',
        borderRadius: 10,
        padding: 16,
        marginBottom: 16,
    },
    sectionTitle: {
        fontSize: 18,
        fontWeight: 'bold',
        marginBottom: 16,
        color: '#333',
    },
    methodItem: {
        backgroundColor: '#f8f9fa',
        borderRadius: 8,
        padding: 12,
        marginBottom: 12,
    },
    methodHeader: {
        flexDirection: 'row',
        justifyContent: 'space-between',
        alignItems: 'center',
        marginBottom: 8,
    },
    methodName: {
        fontSize: 16,
        fontWeight: '600',
        color: '#333',
    },
    methodFee: {
        fontSize: 16,
        fontWeight: 'bold',
        color: '#007bff',
    },
    methodTime: {
        fontSize: 14,
        color: '#666',
        marginBottom: 4,
    },
    methodDescription: {
        fontSize: 14,
        color: '#666',
    },
    faqItem: {
        marginBottom: 20,
        paddingBottom: 16,
        borderBottomWidth: 1,
        borderBottomColor: '#f0f0f0',
    },
    questionRow: {
        flexDirection: 'row',
        alignItems: 'center',
        marginBottom: 8,
    },
    question: {
        fontSize: 16,
        fontWeight: '600',
        marginLeft: 8,
        color: '#333',
    },
    answer: {
        fontSize: 14,
        color: '#666',
        lineHeight: 20,
        marginLeft: 28,
    },
    areaItem: {
        flexDirection: 'row',
        alignItems: 'center',
        marginBottom: 16,
    },
    areaInfo: {
        marginLeft: 12,
        flex: 1,
    },
    areaName: {
        fontSize: 16,
        fontWeight: '600',
        color: '#333',
    },
    areaTime: {
        fontSize: 14,
        color: '#666',
        marginTop: 2,
    },
    noteItem: {
        flexDirection: 'row',
        alignItems: 'center',
        marginBottom: 12,
    },
    noteText: {
        fontSize: 14,
        color: '#333',
        marginLeft: 8,
    },
    contactSection: {
        backgroundColor: '#fff',
        borderRadius: 10,
        padding: 16,
        marginBottom: 20,
    },
    contactTitle: {
        fontSize: 18,
        fontWeight: 'bold',
        marginBottom: 12,
        color: '#333',
    },
    contactText: {
        fontSize: 14,
        color: '#666',
        marginBottom: 16,
        lineHeight: 20,
    },
    contactInfo: {
        flexDirection: 'row',
        alignItems: 'center',
        marginBottom: 8,
    },
    contactDetail: {
        fontSize: 14,
        color: '#333',
        marginLeft: 8,
    },
}); 